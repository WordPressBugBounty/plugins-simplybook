/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const OnboardingLazyImport = createFileRoute('/onboarding')()
const IndexLazyImport = createFileRoute('/')()
const SettingsSettingsIdLazyImport = createFileRoute('/settings/$settingsId')()
const OnboardingStyleWidgetLazyImport = createFileRoute(
  '/onboarding/style-widget',
)()
const OnboardingInformationCheckLazyImport = createFileRoute(
  '/onboarding/information-check',
)()
const OnboardingImplementationLazyImport = createFileRoute(
  '/onboarding/implementation',
)()
const OnboardingCreateYourAccountLazyImport = createFileRoute(
  '/onboarding/create-your-account',
)()
const OnboardingConfirmEmailLazyImport = createFileRoute(
  '/onboarding/confirm-email',
)()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const OnboardingLazyRoute = OnboardingLazyImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/onboarding.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SettingsSettingsIdLazyRoute = SettingsSettingsIdLazyImport.update({
  id: '/$settingsId',
  path: '/$settingsId',
  getParentRoute: () => SettingsLazyRoute,
} as any).lazy(() =>
  import('./routes/settings/$settingsId.lazy').then((d) => d.Route),
)

const OnboardingStyleWidgetLazyRoute = OnboardingStyleWidgetLazyImport.update({
  id: '/style-widget',
  path: '/style-widget',
  getParentRoute: () => OnboardingLazyRoute,
} as any).lazy(() =>
  import('./routes/onboarding/style-widget.lazy').then((d) => d.Route),
)

const OnboardingInformationCheckLazyRoute =
  OnboardingInformationCheckLazyImport.update({
    id: '/information-check',
    path: '/information-check',
    getParentRoute: () => OnboardingLazyRoute,
  } as any).lazy(() =>
    import('./routes/onboarding/information-check.lazy').then((d) => d.Route),
  )

const OnboardingImplementationLazyRoute =
  OnboardingImplementationLazyImport.update({
    id: '/implementation',
    path: '/implementation',
    getParentRoute: () => OnboardingLazyRoute,
  } as any).lazy(() =>
    import('./routes/onboarding/implementation.lazy').then((d) => d.Route),
  )

const OnboardingCreateYourAccountLazyRoute =
  OnboardingCreateYourAccountLazyImport.update({
    id: '/create-your-account',
    path: '/create-your-account',
    getParentRoute: () => OnboardingLazyRoute,
  } as any).lazy(() =>
    import('./routes/onboarding/create-your-account.lazy').then((d) => d.Route),
  )

const OnboardingConfirmEmailLazyRoute = OnboardingConfirmEmailLazyImport.update(
  {
    id: '/confirm-email',
    path: '/confirm-email',
    getParentRoute: () => OnboardingLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/onboarding/confirm-email.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/confirm-email': {
      id: '/onboarding/confirm-email'
      path: '/confirm-email'
      fullPath: '/onboarding/confirm-email'
      preLoaderRoute: typeof OnboardingConfirmEmailLazyImport
      parentRoute: typeof OnboardingLazyImport
    }
    '/onboarding/create-your-account': {
      id: '/onboarding/create-your-account'
      path: '/create-your-account'
      fullPath: '/onboarding/create-your-account'
      preLoaderRoute: typeof OnboardingCreateYourAccountLazyImport
      parentRoute: typeof OnboardingLazyImport
    }
    '/onboarding/implementation': {
      id: '/onboarding/implementation'
      path: '/implementation'
      fullPath: '/onboarding/implementation'
      preLoaderRoute: typeof OnboardingImplementationLazyImport
      parentRoute: typeof OnboardingLazyImport
    }
    '/onboarding/information-check': {
      id: '/onboarding/information-check'
      path: '/information-check'
      fullPath: '/onboarding/information-check'
      preLoaderRoute: typeof OnboardingInformationCheckLazyImport
      parentRoute: typeof OnboardingLazyImport
    }
    '/onboarding/style-widget': {
      id: '/onboarding/style-widget'
      path: '/style-widget'
      fullPath: '/onboarding/style-widget'
      preLoaderRoute: typeof OnboardingStyleWidgetLazyImport
      parentRoute: typeof OnboardingLazyImport
    }
    '/settings/$settingsId': {
      id: '/settings/$settingsId'
      path: '/$settingsId'
      fullPath: '/settings/$settingsId'
      preLoaderRoute: typeof SettingsSettingsIdLazyImport
      parentRoute: typeof SettingsLazyImport
    }
  }
}

// Create and export the route tree

interface OnboardingLazyRouteChildren {
  OnboardingConfirmEmailLazyRoute: typeof OnboardingConfirmEmailLazyRoute
  OnboardingCreateYourAccountLazyRoute: typeof OnboardingCreateYourAccountLazyRoute
  OnboardingImplementationLazyRoute: typeof OnboardingImplementationLazyRoute
  OnboardingInformationCheckLazyRoute: typeof OnboardingInformationCheckLazyRoute
  OnboardingStyleWidgetLazyRoute: typeof OnboardingStyleWidgetLazyRoute
}

const OnboardingLazyRouteChildren: OnboardingLazyRouteChildren = {
  OnboardingConfirmEmailLazyRoute: OnboardingConfirmEmailLazyRoute,
  OnboardingCreateYourAccountLazyRoute: OnboardingCreateYourAccountLazyRoute,
  OnboardingImplementationLazyRoute: OnboardingImplementationLazyRoute,
  OnboardingInformationCheckLazyRoute: OnboardingInformationCheckLazyRoute,
  OnboardingStyleWidgetLazyRoute: OnboardingStyleWidgetLazyRoute,
}

const OnboardingLazyRouteWithChildren = OnboardingLazyRoute._addFileChildren(
  OnboardingLazyRouteChildren,
)

interface SettingsLazyRouteChildren {
  SettingsSettingsIdLazyRoute: typeof SettingsSettingsIdLazyRoute
}

const SettingsLazyRouteChildren: SettingsLazyRouteChildren = {
  SettingsSettingsIdLazyRoute: SettingsSettingsIdLazyRoute,
}

const SettingsLazyRouteWithChildren = SettingsLazyRoute._addFileChildren(
  SettingsLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/onboarding': typeof OnboardingLazyRouteWithChildren
  '/settings': typeof SettingsLazyRouteWithChildren
  '/onboarding/confirm-email': typeof OnboardingConfirmEmailLazyRoute
  '/onboarding/create-your-account': typeof OnboardingCreateYourAccountLazyRoute
  '/onboarding/implementation': typeof OnboardingImplementationLazyRoute
  '/onboarding/information-check': typeof OnboardingInformationCheckLazyRoute
  '/onboarding/style-widget': typeof OnboardingStyleWidgetLazyRoute
  '/settings/$settingsId': typeof SettingsSettingsIdLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/onboarding': typeof OnboardingLazyRouteWithChildren
  '/settings': typeof SettingsLazyRouteWithChildren
  '/onboarding/confirm-email': typeof OnboardingConfirmEmailLazyRoute
  '/onboarding/create-your-account': typeof OnboardingCreateYourAccountLazyRoute
  '/onboarding/implementation': typeof OnboardingImplementationLazyRoute
  '/onboarding/information-check': typeof OnboardingInformationCheckLazyRoute
  '/onboarding/style-widget': typeof OnboardingStyleWidgetLazyRoute
  '/settings/$settingsId': typeof SettingsSettingsIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/onboarding': typeof OnboardingLazyRouteWithChildren
  '/settings': typeof SettingsLazyRouteWithChildren
  '/onboarding/confirm-email': typeof OnboardingConfirmEmailLazyRoute
  '/onboarding/create-your-account': typeof OnboardingCreateYourAccountLazyRoute
  '/onboarding/implementation': typeof OnboardingImplementationLazyRoute
  '/onboarding/information-check': typeof OnboardingInformationCheckLazyRoute
  '/onboarding/style-widget': typeof OnboardingStyleWidgetLazyRoute
  '/settings/$settingsId': typeof SettingsSettingsIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/onboarding'
    | '/settings'
    | '/onboarding/confirm-email'
    | '/onboarding/create-your-account'
    | '/onboarding/implementation'
    | '/onboarding/information-check'
    | '/onboarding/style-widget'
    | '/settings/$settingsId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/onboarding'
    | '/settings'
    | '/onboarding/confirm-email'
    | '/onboarding/create-your-account'
    | '/onboarding/implementation'
    | '/onboarding/information-check'
    | '/onboarding/style-widget'
    | '/settings/$settingsId'
  id:
    | '__root__'
    | '/'
    | '/onboarding'
    | '/settings'
    | '/onboarding/confirm-email'
    | '/onboarding/create-your-account'
    | '/onboarding/implementation'
    | '/onboarding/information-check'
    | '/onboarding/style-widget'
    | '/settings/$settingsId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  OnboardingLazyRoute: typeof OnboardingLazyRouteWithChildren
  SettingsLazyRoute: typeof SettingsLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  OnboardingLazyRoute: OnboardingLazyRouteWithChildren,
  SettingsLazyRoute: SettingsLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/onboarding",
        "/settings"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/onboarding": {
      "filePath": "onboarding.lazy.jsx",
      "children": [
        "/onboarding/confirm-email",
        "/onboarding/create-your-account",
        "/onboarding/implementation",
        "/onboarding/information-check",
        "/onboarding/style-widget"
      ]
    },
    "/settings": {
      "filePath": "settings.lazy.jsx",
      "children": [
        "/settings/$settingsId"
      ]
    },
    "/onboarding/confirm-email": {
      "filePath": "onboarding/confirm-email.lazy.jsx",
      "parent": "/onboarding"
    },
    "/onboarding/create-your-account": {
      "filePath": "onboarding/create-your-account.lazy.jsx",
      "parent": "/onboarding"
    },
    "/onboarding/implementation": {
      "filePath": "onboarding/implementation.lazy.jsx",
      "parent": "/onboarding"
    },
    "/onboarding/information-check": {
      "filePath": "onboarding/information-check.lazy.jsx",
      "parent": "/onboarding"
    },
    "/onboarding/style-widget": {
      "filePath": "onboarding/style-widget.lazy.jsx",
      "parent": "/onboarding"
    },
    "/settings/$settingsId": {
      "filePath": "settings/$settingsId.lazy.jsx",
      "parent": "/settings"
    }
  }
}
ROUTE_MANIFEST_END */
